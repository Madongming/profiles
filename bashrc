# Matthew Wang's Bash Profile for general Linux/Unix
#
# Suggestion: ln -sf .bashrc .bash_profile
#

export PATH=$PATH:$HOME/bin

function __git_active_branch() {
    local branch=$(git symbolic-ref HEAD 2>/dev/null)
    [[ -z $branch ]] || echo "(${branch##refs/heads/})"
}

# Fancy PS1, prompt the '$' in red when we have background jobs, '\[' and '\]'
# is to mark ansi colors to allow shell to calculate prompt string length
# correctly
#
_LR="\[\e[1;31m\]"      # light red
_LG="\[\e[1;32m\]"      # light green
_LY="\[\e[1;33m\]"      # light yellow
_LB="\[\e[1;34m\]"      # light blue
_HU="\[\e[0;1;4m\]"     # hilight, underline
_RR="\[\e[7;31m\]"      # reverse red
_NC="\[\e[0m\]"         # no color

# Start from exit status of last command
PS1="\$([[ \$? == 0 ]] && echo '${_LG}✔${_NC}' || echo '${_LR}✘${_NC}') "
PS1="${PS1}${_HU}"                                  # then init to hi/ul
PS1="${PS1}${_LB}\h"                                # blue hostname
PS1="${PS1}${_HU}"                                  # reset back to hi/ul
PS1="${PS1} \w "                                    # cwd
PS1="${PS1}${_LY}\$(__git_active_branch)${_NC}"     # yellow git branch
PS1="${PS1}\$([[ -z \$(jobs) ]] || echo '$_RR')"    # reverse bg job indicator
PS1="${PS1}\\\$${_NC} "                             # $
unset _LR _LG _LY _LB _HU _RR _NC

export PS1
export EDITOR=vim
export TERM=linux
export GREP_OPTIONS="--color=auto"

# Locale matters for ls and sort
# www.gnu.org/software/coreutils/faq/#Sort-does-not-sort-in-normal-order_0021
export LC_COLLATE=C

# To start a global ssh-agent: ssh-agent | sed /^echo/d > ~/.ssh-agent.rc
[[ ! -r ~/.ssh-agent.rc ]] || source ~/.ssh-agent.rc

# Shortcuts (Aliases, function, auto completion etc.)
#
case $(uname -s) in
    Linux)
        alias ls='/bin/ls -F --color=auto'
        alias l='/bin/ls -lF --color=auto'
        alias lsps='ps -ef f | grep -vw grep | grep -i'
        ;;
    Darwin)
        alias ls='/bin/ls -F'
        alias l='/bin/ls -lF'
        alias lsps='ps -ax -o user,pid,ppid,stime,tty,time,comm | grep -vw grep | grep -i'
        ;;
    *)
        alias ls='/bin/ls -F'
        alias l='/bin/ls -lF'
        alias lsps='ps -auf | grep -vw grep | grep -i'
        ;;
esac

# Find a File by pattern
function f() {
    local pat=${1?'Usage: f pattern [path...]'}
    shift
    find ${@:-.} -regex '.*\.\(idea\|svn\|git\).*' \
        -prune -o -print | grep -i "$pat"
}

# Load file list generated by function f() above in vim, you can type 'gf' to
# jump to the file
#
function vif() {
    local tmpf=$(mktemp)
    f "$@" > $tmpf && vi -c "/$1" $tmpf && rm -f $tmpf
}

# Grep a string in currently dir by file pattern quickly
function g() {
    file_pat=$1
    string_pat=${2:?"Usage: g 'file-pattern' 'string-pattern' [grep options]"}
    shift 2
    find . -type f -name "$file_pat" -print0 \
        | xargs -0 -n1 -P128 grep -H "$string_pat" "$@"
}

# Auto complete unset from exported variables
complete -A export unset

# Don't tab-expand hidden files
bind 'set match-hidden-files off' >& /dev/null

# vim:set et sts=4 sw=4 ft=sh:
