# Matthew Wang's Bash Profile for Y!
#
# Suggestion: ln -sf .bashrc .bash_profile
#

# Source global definitions
[[ -f /etc/profile ]] && . /etc/profile
[[ -f /etc/bashrc ]] && . /etc/bashrc
[[ -f ~/DIRS ]] && . ~/DIRS

# Customized PATH
#
function pathmunge() {
    local x
    for x in "$@"; do
        [[ :$PATH: == *:$x: ]] || PATH=$x:$PATH
    done
}
pathmunge /bin /usr/bin /sbin /usr/sbin /usr/local/bin /usr/local/sbin \
          /home/y/bin64 /home/y/bin ~/bin
unset pathmunge
export PATH

# Java and maven exports
[[ -d /home/y/libexec/java ]] && \
    export JAVA_HOME=/home/y/libexec/java
[[ -d /home/y/libexec/maven ]] && \
    export M2_HOME=/home/y/libexec/maven
#export MAVEN_OPTS="-Xmx1024m"

function __git_active_branch() {
    local branch=$(git symbolic-ref HEAD 2>/dev/null)
    [[ -z $branch ]] || echo "(${branch##refs/heads/})"
}

# Tip: start a global ssh-agent for yourself in /etc/rc.d/rc.local like this:
#   U=wangyl
#   rm -f /home/$U/.ssh-agent.sock
#   /bin/su -m $U -c "/usr/bin/ssh-agent -s -a /home/$U/.ssh-agent.sock \
#      | sed '/^echo/d' > /home/$U/.ssh-agent.rc"
# You will need to ssh-add your identity manually once
#
_LR="\[\e[1;31m\]"      # light red
_LG="\[\e[1;32m\]"      # light green
_LY="\[\e[1;33m\]"      # light yellow
_LB="\[\e[1;34m\]"      # light blue
_HU="\[\e[0;1;4m\]"     # hilight, underline
_RR="\[\e[7;31m\]"      # reverse red
_NC="\[\e[0m\]"         # no color

# Start from exit status of last command, note bash < 3.2 has problem dealing
# with wide chars
#
if [[ ${BASH_VERSINFO[0]} > 4 ]] || [[ $BASH_VERSION > 3.1 ]]; then
    PS1="\$([[ \$? == 0 ]] && echo '${_LG}✔${_NC}' || echo '${_LR}✘${_NC}') "
else
    PS1="\$([[ \$? == 0 ]] && echo '${_LG}^${_NC}' || echo '${_LR}!${_NC}') "
fi
PS1="${PS1}${_HU}"                                  # then init to hi/ul

if [[ -f ~/.ssh-agent.rc ]]; then
    # I am on my own machine, try load ssh-agent related environments
    . ~/.ssh-agent.rc
    if [[ -d /proc/${SSH_AGENT_PID:-0} ]]; then
        if ! ssh-add -l >& /dev/null; then
            echo -e "\x1b[1;31mWarning: No key is being held by ssh-agent," \
                    "try 'ssh-add <your-ssh-private-key>'\x1b[0m" >&2
        fi
    else
        echo -e "\x1b[1;31mWarning: Global ssh-agent is not alive," \
                "please review /etc/rc.d/rc.local\x1b[0m" >&2
    fi
else
    # Otherwise assume I am on other's box, highlight hostname in red
    PS1="${PS1}${_LR}"
fi

# Fancy PS1, prompt current yroot, also prompt the '$' in red when we have
# background jobs, '\[' and '\]' is to mark ansi colors to allow shell to
# calculate prompt string length correctly
#
PS1="${PS1}$(_H=${HOSTNAME%.yahoo.*}; echo ${_H%.peking.corp})"
PS1="${PS1}${_LG}"                                  # then green {yroot}
PS1="${PS1}"'$([[ -z $YROOT_NAME ]] || echo "{$YROOT_NAME}")'
PS1="${PS1}${_HU}"                                  # reset back to hi/ul
PS1="${PS1} \w "                                    # cwd
PS1="${PS1}${_LY}\$(__git_active_branch)${_NC}"     # yellow git branch
PS1="${PS1}\$([[ -z \$(jobs) ]] || echo '$_RR')"    # reverse bg job indicator
PS1="${PS1}\\\$${_NC} "                             # $
unset _LR _LG _LY _LB _HU _RR _NC

export PS1
export EDITOR=vim
export TERM=linux
export GREP_OPTIONS="--color=auto"

# Locale matters for ls and sort
# www.gnu.org/software/coreutils/faq/#Sort-does-not-sort-in-normal-order_0021
export LC_COLLATE=C

# Shortcuts (Aliases, function, auto completion etc.)
#
if [[ $(uname -s) == Linux ]]; then
    alias ls='/bin/ls -F --color=auto'
    alias l='/bin/ls -lF --color=auto'
    alias lsps='ps -ef f | grep -vw grep | grep -i'
else
    alias ls='/bin/ls -F'
    alias l='/bin/ls -lF'
    alias lsps='ps -auf | grep -vw grep | grep -i'
fi

# Find a File by pattern
function f() {
    local pat=${1?'Usage: f pattern [path...]'}
    shift
    find $@ -regex '.*\.\(idea\|svn\|git\).*' \
        -prune -o -print | grep -i "$pat"
}

# Load file list generated by function f() above in vim, you can type 'gf' to
# jump to the file
#
function vif() {
    local tmpf=$(mktemp)
    f "$@" > $tmpf && vi -c "/$1" $tmpf && rm -f $tmpf
}

# Grep a string in currently dir by file pattern quickly
function g() {
    file_pat=$1
    string_pat=${2:?"Usage: g 'file-pattern' 'string-pattern' [grep options]"}
    shift 2
    find . -type f -name "$file_pat" -print0 \
        | xargs -0 -n1 -P0 grep -H "$string_pat" "$@"
}

# Auto complete hostnames for hostname related commands, note 'complete -A
# hostname' also works but it does not recognize new $HOSTFILE
#
function _host_complete()
{
    local cur=${COMP_WORDS[COMP_CWORD]}
    COMPREPLY=($(compgen -W "$(awk '!/^#/{print $1}' ~/HOSTS)" -- $cur))
}
complete -F _host_complete ssh scp igor pogo host nc ping mssh scp-profile.sh

# Auto complete unset from exported variables
complete -A export unset

# Yroot name auto completion
function _yroot_complete ()
{
    local cur=${COMP_WORDS[COMP_CWORD]};
    local -a yroots=(
        $(cd /home/y/var/yroots && /bin/ls *.conf | sed 's/\.conf$//g')
    )
    COMPREPLY=($(compgen -W '${yroots[@]}' -- $cur ))
}
complete -F _yroot_complete yroot

# Don't tab-expand hidden files
bind 'set match-hidden-files off' >& /dev/null

# vim:set et sts=4 sw=4 ft=sh:
